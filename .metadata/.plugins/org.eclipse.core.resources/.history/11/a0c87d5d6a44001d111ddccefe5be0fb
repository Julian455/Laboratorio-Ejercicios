/*
 ============================================================================
 Name        : array6-2.c
 Author      : 
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 Ejercicio 6-2: Realizar un programa que permita el ingreso de 10 números enteros
(positivos y negativos). Necesito generar un listado de los números positivos de
manera creciente y negativos de manera decreciente. (Como máximo 5 estructuras
repetitivas)
[Listado 1: 4, 5, 6, 10, 18, 29]
[Listado 2 : -1,-5,-9,-12]
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#define TAM 10
int ordenarCrecitePos(int numeros[],int limit);
void pedirNumeros(int numeros[], int logitud);
int obtenerEntero(char *mensaje, int minimo, int maximo);
int encontrarPositivo(int numeros[],int logitud);
int ordenPositivo(int numeros[],int logitud);
int signo(int numeros);

int main(void) {
	setbuf(stdout, NULL);
	int numero[TAM];

	pedirNumeros(numero, TAM);
	ordenarCrecitePos(numero, TAM);
	ordenPositivo(numero, TAM);

	return EXIT_SUCCESS;
}
void pedirNumeros(int numeros[], int logitud) {

	printf("\n");

	for (int i = 0; i < logitud; i++) {
		numeros[i] = obtenerEntero("Ingresa numero", -100, 100);
	}

}
int obtenerEntero(char *mensaje, int minimo, int maximo) {
	int numeroIngresado;
	printf("%s", mensaje); //cadena de texto no lleva &
	scanf("%d", &numeroIngresado);
	while (numeroIngresado < minimo || numeroIngresado > maximo) {
		printf("Error reingrese los numeros");
		scanf("%d", &numeroIngresado);

	}
	return numeroIngresado;
}
int ordenarCrecitePos(int numeros[],int logitud)
{
    int retorno=-1;
    int flag;
    int i;
    int buffer;
    if(numeros!=NULL && logitud>0){
        retorno=0;
        do{
            flag=0;
            for(i=0;i<logitud-1;i++){
                if(numeros[i] > numeros[i+1]){
                    buffer=numeros[i];
                    numeros[i]=numeros[i+1];
                    numeros[i+1]=buffer;
                    flag=1;
                }
            }
            logitud--;
        }while(flag);
    }
    return retorno;
}
int ordenPositivo(int numeros[],int logitud)
{
	int retorno=-1;


	if(numeros!=NULL && logitud>0)
	{
	   printf("\nOrde de los positivos de manera creciente ");
	   encontrarPositivo(numeros, logitud);
	   ordenarCrecitePos(numeros, logitud);
	   printf("\n ");
	   encontrarPositivo(numeros, logitud);
	   retorno=0;
	}

	return retorno;
}
int encontrarPositivo(int numeros[],int logitud)
{
	int retorno=-1;
	int positivos;

	if(numeros!=NULL && logitud>0)
	{
		printf("\nPositivos econtrados");
		for(int i=0;i<logitud;i++)
		{
			positivos=signo(numeros[i]);
			if(positivos==1)
			{
				printf("%d ",numeros[i]);
			}
           retorno=0;
		}
	}


	return retorno;
}
int signo(int numeros)
{
	int retorno=0;

	if(numeros>0)
	{
		retorno=1;
	}
	else
	{
		if(numeros<0)
		{
			retorno=-1;
		}
	}
	return retorno;
}

